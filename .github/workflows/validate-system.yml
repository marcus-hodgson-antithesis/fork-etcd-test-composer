name: Validate SUT can stand up

on: 
  push:
    branches:
      - main

env:
  DOCKER_COMPOSE_PATH: "config/docker-compose.yml"
  IMAGES_TO_NOT_PULL: "etcd-client:latest"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Docker using Docker's official script
        run: |
            curl -fsSL https://get.docker.com -o get-docker.sh 
            sudo sh get-docker.sh
        continue-on-error: false
      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version
        continue-on-error: false
      - name: Checkout Repository for access
        uses: actions/checkout@v4
        continue-on-error: false
      - name: Parse docker-compose for unique images
        run: |
            # Different images separated by a space
            exclude=$IMAGES_TO_NOT_PULL
            images=$(cat $DOCKER_COMPOSE_PATH | grep "image:" | awk '{print $2}' | sort -u | tr -d "'\"" | tr '\n' ' ')
            echo "Extracted images: $images"
            filtered_images=()
            for img in $images; do
              if [[ ! " $exclude " =~ " $img " ]]; then
                filtered_images+=("$img")
              fi
            done
            echo "Filtered images: ${filtered_images[@]}"
        continue-on-error: false
      #TODO: update where we look for the docker-compose
      # - name: Start application-specific services using Docker Compose
      #   run: docker-compose -f $DOCKER_COMPOSE_PATH up -d
      #   continue-on-error: false
      # TODO: sleep
      # TODO: validate that containers are up
      # TODO: validate that setup_complete emitted (might need to define another env var)
      # TODO: take "workload" dir as input; dynamically iterate through test composer scripts; ensure they have non-zero exit code